# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost
paths:
  /auth/login:
    post:
      summary: Login user
      description: Endpoint to login user.
      operationId: authLogin
      tags:
        - Auth
      requestBody:
        description: Login credentials
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthLoginRequest"
      responses:
        '200':
          description: Success login user
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/AuthLoginResponse"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  # TODO: use /v1/api prefix
  /users:
    post:
      summary: Register a new user
      description: Endpoint to register a new user.
      operationId: registerUser
      tags:
        - User
      requestBody:
        description: User registration details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterUserRequest"
      responses:
        '201':
          description: Success create user
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/RegisterUserResponse"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /users/profile:
    get:
      summary: Get user profile.
      operationId: getUserProfile
      tags:
        - User
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Success get user profile
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/GetUserProfileResponse"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      summary: Update user profile.
      operationId: updateUserProfile
      tags:
        - User
      security:
        - BearerAuth: []
      requestBody:
        description: Update user details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserRequest"
      responses:
        '200':
          description: Success update user profile
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/UpdateUserProfileResponse"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    AuthLoginRequest:
      type: object
      required:
        - phone_number
        - password
      properties:
        phone_number:
          type: string
          description: User's phone number
        password:
          type: string
          description: User's password
    RegisterUserRequest:
      type: object
      required:
        - full_name
        - phone_number
        - password
      properties:
        full_name:
          type: string
          description: User's full name
        phone_number:
          type: string
          description: User's phone number
        password:
          type: string
          description: User's password
    UpdateUserRequest:
      type: object
      required:
        - full_name
        - phone_number
      properties:
        full_name:
          type: string
          description: User's full name
        phone_number:
          type: string
          description: User's phone number
    AuthLoginResponse:
      type: object
      required:
        - success
        - message
      properties:
        success:
          x-order: 1
          type: boolean
        message:
          x-order: 2
          type: string
        data:
          x-order: 3
          type: object
          required:
            - id
            - jwt
          properties:
            id:
              x-order: 1
              type: integer
            jwt:
              x-order: 1
              type: string
    RegisterUserResponse:
      type: object
      required:
        - success
        - message
      properties:
        success:
          x-order: 1
          type: boolean
        message:
          x-order: 2
          type: string
        data:
          x-order: 3
          type: object
          required:
            - id
          properties:
            id:
              type: integer
    GetUserProfileResponse:
      type: object
      required:
        - success
        - message
      properties:
        success:
          x-order: 1
          type: boolean
        message:
          x-order: 2
          type: string
        data:
          x-order: 3
          type: object
          required:
            - id
            - full_name
            - phone_number
          properties:
            id:
              x-order: 1
              type: integer
            full_name:
              x-order: 2
              type: string
            phone_number:
              x-order: 3
              type: string
    UpdateUserProfileResponse:
      type: object
      required:
        - success
        - message
      properties:
        success:
          x-order: 1
          type: boolean
        message:
          x-order: 2
          type: string
    ErrorResponse:
      type: object
      required:
        - success
        - message
      properties:
        success:
          x-order: 1
          type: boolean
        message:
          x-order: 2
          type: string
